name: Win64 (GUI/Serial)

on:
  push:
    branches:
    - develop
    - release/*

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Prerequisties
      run: |
        #$Wc = New-Object System.Net.WebClient
        #$Wc.DownloadFile('http://download.qt.io/archive/qt/5.13/5.13.1/qt-opensource-windows-x86-5.13.1.exe', 'qt.exe')
        #$Wc.Dispose()
        #echo 'Downloaded qt-opensource-windows-x86-5.13.1.exe'
        #$env:QT_INSTALL_DIR = 'C:/Qt'
        #Start-Process qt.exe -ArgumentList '--verbose --script ci/windows/qtifwsilent.qs' -NoNewWindow -Wait
        #Remove-Item qt.exe
        choco install -y ninja zip winflexbison innoextract
        choco install mingw --version=7.3.0 --allow-downgrade
    - name: Install Qt
      uses: jurplel/install-qt-action@v2.2.1
      with:
        version: 5.13.1
        host: windows
        arch: win64_mingw73
    - name: Build Freetype
      run: |
        cd $HOME
        git clone 'git://git.sv.nongnu.org/freetype/freetype2.git' freetype-latest
        Echo 'Compiling FreeType...'
        mkdir freetype-build
        cd freetype-build
        cmake -G "Ninja" ../freetype-latest -DBUILD_SHARED_LIBS:STRING=ON -DCMAKE_DISABLE_FIND_PACKAGE_HarfBuzz=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_BZip2=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_PNG=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_ZLIB=TRUE
        ninja
    - name: Build FTGL
      run: |
        cd $HOME
        echo 'Compiling FTGL'
        git clone 'https://github.com/frankheckenbach/ftgl.git' ftgl-latest
        mkdir ftgl-build
        cd ftgl-build
        $env:INCLUDE += "$HOME\freetype-2.10.1;"
        $env:LIB += "$HOME\freetype-build;"
        cmake -G "Ninja" ..\ftgl-latest
        ninja
    - name: Build (CMake/Ninja)
      run: |
        mkdir build
        cd build
        $env:INCLUDE += "$HOME\freetype-2.10.1;"
        $env:LIB += "$HOME\freetype-build;"
        $env:INCLUDE += "$HOME\ftgl-latest\src;"
        $env:LIB += "$HOME\ftgl-build\src;"
        cmake -G "Ninja" -DGUI:bool=true ../
        ninja
        cd ../
    - name: Create Installer
      run: |
        $env:DISSOLVE_DIR = $(Get-Location).path + "\build"
        $env:FREETYPE_DIR = "$($HOME)\freetype-build"
        $env:FTGL_DIR = "$($HOME)\ftgl-build"
        echo $env:Qt5_DIR
        $env:MINGW_DIR = $env:Qt5_DIR
        iscc.exe /O.\ .\ci\windows\dissolve-gui.iss
        $exe = Get-ChildItem  .\*.exe
        echo "Executable installer is "$exe.Name
        innoextract.exe $exe.Name -d $exe.BaseName
        mv "$($exe.BaseName)\app\bin\*" $exe.BaseName
        mv "$($exe.BaseName)\app" ./
        #rm -Force "$($exe.BaseName)\app"
        $zip = $exe.BaseName + ".zip"
        zip -r $zip $exe.BaseName
        mkdir installers
        mv $zip installers
        mv $exe.Name installers
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      if: success()
      with:
        name: artifacts
        path: installers/
  updatecontinuous:
    runs-on: ubuntu-latest
    needs: build
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: contains(github.ref, 'develop')
    steps:
    - uses: actions/checkout@v1
    - name: Download Artifacts
      uses: actions/download-artifact@v1
      with:
        name: artifacts
    - name: Create / Update Continuous Release
      run: |
        SHORTHASH=`git rev-parse --short HEAD`
        VERSION=`grep "DISSOLVEVERSION" src/version.h | sed "s/.*\"\(.*\)\"/\1/g"`
        DATE=`date`
        mv artifacts/Dissolve-GUI-${VERSION}-Win64.zip artifacts/Dissolve-GUI-${VERSION}-${SHORTHASH}-Win64.zip
        mv artifacts/Dissolve-GUI-${VERSION}-Win64.exe artifacts/Dissolve-GUI-${VERSION}-${SHORTHASH}-Win64.exe
        ./ci/scripts/update-release -r ${{ github.repository }} -t continuous -n "Continuous Build (${SHORTHASH})" -b "Continuous release from current \`develop\` branch at ${SHORTHASH}. Built ${DATE}." -p artifacts/*zip artifacts/*exe

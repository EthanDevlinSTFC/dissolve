name: Pull Request

on:
  pull_request:
    branches:
    - develop

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v1
    - name: Install Prerequisites (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install -y ninja winflexbison
        choco install mingw --version=7.3.0 --allow-downgrade
    - name: Install Qt (Windows)
      if: matrix.os == 'windows-latest'
      uses: jurplel/install-qt-action@v2.2.1
      with:
        version: 5.13.1
        host: windows
        arch: win64_mingw73
    - name: Build Prerequisites [Freetype] (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd $HOME
        git clone 'git://git.sv.nongnu.org/freetype/freetype2.git' freetype-latest
        Echo 'Compiling FreeType...'
        mkdir freetype-build
        cd freetype-build
        cmake -G "Ninja" ../freetype-latest -DBUILD_SHARED_LIBS:STRING=ON -DCMAKE_DISABLE_FIND_PACKAGE_HarfBuzz=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_BZip2=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_PNG=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_ZLIB=TRUE
        ninja
    - name: Build Prerequisites [FTGL] (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd $HOME
        echo 'Compiling FTGL'
        git clone 'https://github.com/frankheckenbach/ftgl.git' ftgl-latest
        mkdir ftgl-build
        cd ftgl-build
        $env:INCLUDE += "$HOME\freetype-2.10.1;"
        $env:LIB += "$HOME\freetype-build;"
        cmake -G "Ninja" ..\ftgl-latest
        ninja
    - name: Build (Linux / Serial+GUI)
      if: matrix.os == 'ubuntu-latest'
      run: |
        ci/ubuntu/build_18.04_serial_gui
        cp build/dissolve tests/
    - name: Build (Linux / Parallel)
      if: matrix.os == 'ubuntu-latest'
      run: |
        ci/ubuntu/build_parallel
        cp build/dissolve-mpi tests/
    - name: Build (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir build
        cd build
        $env:INCLUDE += "$HOME\freetype-2.10.1;"
        $env:LIB += "$HOME\freetype-build;"
        $env:INCLUDE += "$HOME\ftgl-latest\src;"
        $env:LIB += "$HOME\ftgl-build\src;"
        cmake -G "Ninja" -DGUI:bool=true ../
        ninja
        cd ../
    - name: Build (OSX)
      if: matrix.os == 'macos-latest'
      run: |
        ci/osx/build_serial_gui
    - name: Upload Test Artifacts (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v1
      with:
        name: test-artifacts
        path: tests/
  system-tests:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        test: [atomshake, broadening, calculate_avgmol, calculate_cn, calculate_dangle, calculate_rdf, calculate_sdf, correlations, energyforce1, epsr, exchangeable, pbctorsion, rdfmethod]
        method: [serial, parallel]
    steps:
    - name: Install Prerequisties (Parallel)
      if: matrix.method == 'parallel'
      run: |
        sudo apt-get install openmpi-bin openmpi-common
    - name: Download Test Artifacts
      uses: actions/download-artifact@v1
      with:
        name: test-artifacts
    - name: Run Test (Serial)
      if: matrix.method == 'serial'
      run: |
        cd test-artifacts
        chmod u+x ./go ./dissolve
        ./go -a -s ./dissolve ${{ matrix.test }}
    - name: Run Test (Parallel)
      if: matrix.method == 'parallel'
      run: |
        cd test-artifacts
        chmod u+x ./go ./dissolve-mpi
        ./go -a -p ./dissolve-mpi ${{ matrix.test }}

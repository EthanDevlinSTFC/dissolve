/*
	*** Thread
	*** src/gui/thread.hui
	Copyright T. Youngs 2012-2020

	This file is part of Dissolve.

	Dissolve is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	Dissolve is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with Dissolve.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef DISSOLVE_THREAD_H
#define DISSOLVE_THREAD_H

#include <QThread>

// Forward Declarations
class Dissolve;
class DissolveWindow;

// Dissolve Thread Worker Class
class DissolveThreadWorker : public QObject
{
	Q_OBJECT

	public:
	// Constructor
	DissolveThreadWorker(Dissolve& dissolve);

	private:
	// Whether the iteration loop should keep going
	bool keepIterating_;
	// Reference to Dissolve
	Dissolve& dissolve_;
	// Number of iterations to run
	int nIterationsToRun_;

	public slots:
	// Perform the specified number of iterations (or -1 to keep going)
	void beginIterating(int nIterations);
	// Stop iterating as soon as possible
	void stopIterating();

	signals:
	void clearMessages();
	void iterated(int iterationsRemaining);
	void iterationsComplete();
};

// Dissolve Thread Controller
class DissolveThreadController : public QObject
{
	Q_OBJECT

	private:
	// Thread for this object
	QThread workerThread_;
	
	public:
	// Constructor
	DissolveThreadController(DissolveWindow* parentWindow, Dissolve& dissolve, int nIterations = -1);
	// Destructor
	~DissolveThreadController();

	public slots:
	// Perform the specified number of main loop iterations
	void iterate(int nIterations);
	// Stop any current iterating
	void stopIterating();

	signals:
	void workerIterate(int);
	void workerStop();
};

#endif

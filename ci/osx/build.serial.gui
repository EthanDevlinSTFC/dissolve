#!/bin/bash

# Enforce verbosity for commands and exit on first failure
set -ev

# Attempt to automatically detect Qt version installed by homebrew
QTVER=`ls -d /usr/local/Cellar/qt/* | sed "s/.*\(5\.[0-9][0-9]\.[0-9]\)/\1/g"`

# Set paths so CMake can find Qt
export Qt5_DIR=/usr/local/Cellar/qt/$QTVER/lib/cmake/Qt5
export Qt5Core_DIR=/usr/local/Cellar/qt/$QTVER/lib/cmake/Qt5Core
export Qt5Widgets_DIR=/usr/local/Cellar/qt/$QTVER/lib/cmake/Qt5Widgets
export Qt5PrintSupport_DIR=/usr/local/Cellar/qt/$QTVER/lib/cmake/Qt5PrintSupport
export Qt5Gui_DIR=/usr/local/Cellar/qt/$QTVER/lib/cmake/Qt5Gui

# Set path to root of Qt installation
Qt5_ROOT=/usr/local/Cellar/qt/${QTVER}

# Create build dir and descend into it
mkdir build
cd build

# Generate build files
cmake ../ -G "Ninja" -DGUI:bool=true

# Build
ninja

# Ascend back to root dir
cd ../

# Retrieve dmg build script
wget -q https://raw.githubusercontent.com/trisyoungs/scripts/master/build-dmg.sh -O build-dmg.sh
chmod u+x build-dmg.sh

# Build dmg files
./build-dmg.sh -d ${Qt5_ROOT} -f ${Qt5_ROOT}/Frameworks ci/osx/dissolve-gui.dmginfo

# Clear old artifacts (the dir will have been created already by Travis)
rm -vf artifacts/Dissolve-GUI*.dmg

# Store artifacts
cp Dissolve-GUI*.dmg artifacts/

